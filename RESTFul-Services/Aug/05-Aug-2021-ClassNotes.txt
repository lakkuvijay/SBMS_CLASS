Last Session : What is .yml file & yml syntax
-------------------------------------------------------------------------
Today's session : How to read yml file data into java class to avoid hard coding
-------------------------------------------------------------------------
-> In realtime applications we need to display several messages like success and failure messages

-> In Realtime applications we will use several third party api urls

-> We should not hard code the messages and URLs in our java program

-> To avoid this hard coding we will use these yml files.

-------------------------------------------------------------------------
server:
  port: 9090
app: 
  messages:
    greetMsg: Good Morning..!!
    welcomeMsg: Welcome to Ashok IT..!!
-------------------------------------------------------------------------
package in.ashokit.props;

import java.util.HashMap;
import java.util.Map;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Configuration;

@Configuration
@EnableConfigurationProperties
@ConfigurationProperties(prefix = "app")
public class AppProperties {

	private Map<String, String> messages = new HashMap<>();

	public Map<String, String> getMessages() {
		return messages;
	}

	public void setMessages(Map<String, String> messages) {
		this.messages = messages;
	}

}
-------------------------------------------------------------------------
package in.ashokit.rest;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import in.ashokit.props.AppProperties;

@RestController
public class WelcomeRestController {

	@Autowired
	private AppProperties appProps;

	@GetMapping("/welcome")
	public String welcomeMsg() {
		Map<String, String> msgs = appProps.getMessages();
		String msgValue = msgs.get("welcomeMsg");
		return msgValue;
	}

	@GetMapping("/greet")
	public String greetMsg() {
		Map<String, String> msgs = appProps.getMessages();
		String greetVal = msgs.get("greetMsg");
		return greetVal;
	}
}
-------------------------------------------------------------------------
Actuators in Spring Boot
------------------------------------------------------------------------
-> Actuator is one of the powerful concept provided by Spring Boot

-> Actuators are used get production ready features of the application




















