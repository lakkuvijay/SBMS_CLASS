Last session : CrudRepository interface methods
------------------------------------------------------------------------
-> CrudRepository is an interface available in data jpa

-> This interface provided several methods to perform Crud operations.

-------------------------------------------------------------------------

-> In Data JPA, we can perform DB operations in 3 ways

	1) Predefined methods
	2) findByXXX methods
	3) Custom Queries

-> Predefined methods we have executed in last session


findByXXX methods
------------------
-> findBy methods are used to perform retrival operatoins

-> When we write a findBy method Data JPA will construct the query based on our method name

-> Method Naming convention is very very important for findBy methods.


------------------------------------------------------------------------
package in.ashokit.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "EMP_TBL")
public class Employee {

	public Employee() {
	}

	public Employee(Integer empId, String empName, Double empSal) {
		this.empId = empId;
		this.empName = empName;
		this.empSal = empSal;
	}

	@Id
	@Column(name = "EMP_ID")
	private Integer empId;

	@Column(name = "EMP_NAME")
	private String empName;

	@Column(name = "EMP_SAL")
	private Double empSal;

	public Integer getEmpId() {
		return empId;
	}

	public void setEmpId(Integer empId) {
		this.empId = empId;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public Double getEmpSal() {
		return empSal;
	}

	public void setEmpSal(Double empSal) {
		this.empSal = empSal;
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empName=" + empName + ", empSal=" + empSal + "]";
	}

}
-------------------------------------------------------------------------
package in.ashokit.repository;

import java.io.Serializable;
import java.util.List;

import org.springframework.data.repository.CrudRepository;

import in.ashokit.entity.Employee;

public interface EmpRepository extends CrudRepository<Employee, Serializable> {

	public List<Employee> findByEmpName(String name);

	public List<Employee> findByEmpSal(Double sal);

	public List<Employee> findByEmpNameAndEmpSal(String name, Double salary);

	public List<Employee> findByEmpSalGreaterThan(Double empSal);

	public List<Employee> findByEmpNameIn(List<String> names);

}
-----------------------------------------------------------------------------------
-> Using Data JPA we can execute custom queries also

-> To execute custom queries we will use @Query annotation.


What is the difference between HQL and Native SQL queries?
----------------------------------------------------------
-> In SQL queries we will use table name and column names directley

-> In HQL queries we will use Entity class name and variable names

-> SQL queries are database dependent

-> HQL queries are database in-dependent

Note: Database can't understand HQL... DB will understand only SQL. 

-> To convert HQL queries to SQL queries Dialect classes will be used.


SQL :: select emp_name from emp_tbl where emp_id=101;
HQL :: select empName from Employee where empId=101;

SQL :: select emp_name, emp_sal from emp_tbl where emp_id=101;
HQL :: select empName, empSal from Employee where empId=101;

SQL :: select * from emp_tbl where emp_id=101;
HQL :: from Employee where empId=101;
































